//==============================================================================
// Hierarchical dofile generated by Conformal LEC
// Version: 17.20-s300 (10-Feb-2018) (64 bit executable)
//------------------------------------------------------------------------------
// For additional reporting on 'not written' modules, see the 'VERBOSE REPORTING'
// section at the end of the hierarchical dofile
//------------------------------------------------------------------------------
// The command 'set module property' sets the instance context for the current
// root module. It is intended only for hierarchical comparison, and should
// not be modified by the user.
//------------------------------------------------------------------------------
// The 'set_toplevel_constraints' commands are translation of the user added
// top-level pathname constraints specified with the ADD PRIMARY INPUT, ADD PIN
// CONSTRAINTS, ADD INSTANCE CONSTRAINTS, and ADD CUT POINT commands. This
// translation allows for portability of the hierarchical dofile as well as
// easy debugging. These commands are intended only for hierarchical comparison,
// and should not be modified by the user.
//------------------------------------------------------------------------------
// TERMS AND NOTATIONS USED
//------------------------------------------------------------------------------
// Module Instantiation Rato: Average number of instantiations per matching module
// Periphery size: #Logic gates in the fanin and fanout cone of instance's input and output boundary, and bounded by key-points
// 0: Indicates pin is constant zero
// 1: Indicates pin is constant one
// X: Indicates pin is full DC
// U: Indicates pin is unreachable
// Z: Indicates pin is floating
// KP<--: Indicates pin's fanin is directly connected to key-point (ignores buffers/inverters)
// -->KP: Indicates pin's fanout is directly connected to key-point (ignores buffers/inverters)
// REP: Indicates pin is representative pin
// EQ_REP: <polarity> rep_pinname>: Indicates pin is a member EQ pin with
// 'rep_pinname' specifying the representative, and 'polarity' specifying
// if it is positive or negative equivalent
// = : Indicates that the pins on LHS and RHS are mapped
// + : Indicates positive polarity for pin mapping
// - : Indicates negative polarity for pin mapping
// ? : Indicates unknown polarity for pin mapping
// G: Indicates that the pin belongs to Golden
// R: Indicates that the pin belongs to Revised
// IN: Indicates that the pin is an Input pin
// OUT: Indicates that the pin is an Output pin
// IO: Indicates that the pin is an Inout pin. Polarity of Inout pin is
//     always '?' because of name-only mapping
//==============================================================================

set system mode setup
set_toplevel_constraints reset -Golden
set_toplevel_constraints reset -Revised
set_toplevel_constraints pin_constraints dft_shift_enable -constraint 0 -Golden
set_toplevel_constraints pin_constraints dft_shift_enable -constraint 0 -Revised
delete set_seq_merge
set_seq_merge U_FFT1/UMR/dx5_reg[20]  U_FFT1/UMR/dx5_reg[21] -Golden
set_seq_merge U_FFT1/UMI/dx5_reg[20]  U_FFT1/UMI/dx5_reg[21] -Golden
set_seq_merge U_FFT1/UMR/dt_reg[17]  U_FFT1/UMR/dt_reg[18] -Golden
set_seq_merge U_FFT1/UMI/dt_reg[17]  U_FFT1/UMI/dt_reg[18] -Golden
set_seq_merge U_FFT2/UMR/dx5_reg[22]  U_FFT2/UMR/dx5_reg[23] -Golden
set_seq_merge U_FFT2/UMI/dx5_reg[22]  U_FFT2/UMI/dx5_reg[23] -Golden
set_seq_merge U_FFT2/UMR/dt_reg[19]  U_FFT2/UMR/dt_reg[20] -Golden
set_seq_merge U_FFT2/UMI/dt_reg[19]  U_FFT2/UMI/dt_reg[20] -Golden
set_seq_merge U_FFT1/UMI_dt_reg[17]  U_FFT1/UMI_dx5_reg[20] -Golden
set_seq_merge U_FFT1/UMR_dt_reg[17]  U_FFT1/UMR_dx5_reg[20] -Golden
set_seq_merge U_FFT2/UMI_dt_reg[19]  U_FFT2/UMI_dx5_reg[22] -Golden
set_seq_merge U_FFT2/UMR_dt_reg[19]  U_FFT2/UMR_dx5_reg[22] -Golden
// Comparing
//------------------------------------------------------------------------------
// MODULE RAM2x64C_1_nb16 (G) INSTANCE /U_BUF1/URAM (G)
// MODULE RAM2x64C_1_nb16 (R) INSTANCE /U_BUF1_URAM (R)
//------------------------------------------------------------------------------
// RESOLVED Constraints
// IN (G) CLK (REP)  =   (R) CLK (REP) (by sim and name)
// IN (G) ED  (EQ_REP: +WE)  =   (R) ED 0U(REP) (by name)
// IN (G) WE (REP)  =   (R) WE (REP) (by sim and name)
// IN (G) ODD (REP)  =   (R) ODD (REP) (by sim and name)
// IN (G) ADDRW[5]  (EQ_REP: +ADDRR[2])  =   (R) ADDRW[5] 0U(REP) (by name)
// IN (G) ADDRW[4]  (EQ_REP: +ADDRR[1])  =   (R) ADDRW[4] 0U(REP) (by name)
// IN (G) ADDRW[3]  (EQ_REP: +ADDRR[0])  =   (R) ADDRW[3] 0U(REP) (by name)
// IN (G) ADDRW[2]  (EQ_REP: +ADDRR[5])  =   (R) ADDRW[2] 0U(REP) (by name)
// IN (G) ADDRW[1]  (EQ_REP: +ADDRR[4])  =   (R) ADDRW[1] 0U(REP) (by name)
// IN (G) ADDRW[0]  (EQ_REP: +ADDRR[3])  =   (R) ADDRW[0] 0U(REP) (by name)
// IN (G) ADDRR[5] (REP)  =   (R) ADDRR[5] (REP) (by sim and name)
// IN (G) ADDRR[4] (REP)  =   (R) ADDRR[4] (REP) (by sim and name)
// IN (G) ADDRR[3] (REP)  =   (R) ADDRR[3] (REP) (by sim and name)
// IN (G) ADDRR[2] (REP)  =   (R) ADDRR[2] (REP) (by sim and name)
// IN (G) ADDRR[1] (REP)  =   (R) ADDRR[1] (REP) (by sim and name)
// IN (G) ADDRR[0] (REP)  =   (R) ADDRR[0] (REP) (by sim and name)
// IN (G) DR[15] (REP)  =   (R) DR[15] (REP) (by sim and name)
// IN (G) DR[14] (REP)  =   (R) DR[14] (REP) (by sim and name)
// IN (G) DR[13] (REP)  =   (R) DR[13] (REP) (by sim and name)
// IN (G) DR[12] (REP)  =   (R) DR[12] (REP) (by sim and name)
// IN (G) DR[11] (REP)  =   (R) DR[11] (REP) (by sim and name)
// IN (G) DR[10] (REP)  =   (R) DR[10] (REP) (by sim and name)
// IN (G) DR[9] (REP)  =   (R) DR[9] (REP) (by sim and name)
// IN (G) DR[8] (REP)  =   (R) DR[8] (REP) (by sim and name)
// IN (G) DR[7] (REP)  =   (R) DR[7] (REP) (by sim and name)
// IN (G) DR[6] (REP)  =   (R) DR[6] (REP) (by sim and name)
// IN (G) DR[5] (REP)  =   (R) DR[5] (REP) (by sim and name)
// IN (G) DR[4] (REP)  =   (R) DR[4] (REP) (by sim and name)
// IN (G) DR[3] (REP)  =   (R) DR[3] (REP) (by sim and name)
// IN (G) DR[2] (REP)  =   (R) DR[2] (REP) (by sim and name)
// IN (G) DR[1] (REP)  =   (R) DR[1] (REP) (by sim and name)
// IN (G) DR[0] (REP)  =   (R) DR[0] (REP) (by sim and name)
// IN (G) DI[15] (REP)  =   (R) DI[15] (REP) (by sim and name)
// IN (G) DI[14] (REP)  =   (R) DI[14] (REP) (by sim and name)
// IN (G) DI[13] (REP)  =   (R) DI[13] (REP) (by sim and name)
// IN (G) DI[12] (REP)  =   (R) DI[12] (REP) (by sim and name)
// IN (G) DI[11] (REP)  =   (R) DI[11] (REP) (by sim and name)
// IN (G) DI[10] (REP)  =   (R) DI[10] (REP) (by sim and name)
// IN (G) DI[9] (REP)  =   (R) DI[9] (REP) (by sim and name)
// IN (G) DI[8] (REP)  =   (R) DI[8] (REP) (by sim and name)
// IN (G) DI[7] (REP)  =   (R) DI[7] (REP) (by sim and name)
// IN (G) DI[6] (REP)  =   (R) DI[6] (REP) (by sim and name)
// IN (G) DI[5] (REP)  =   (R) DI[5] (REP) (by sim and name)
// IN (G) DI[4] (REP)  =   (R) DI[4] (REP) (by sim and name)
// IN (G) DI[3] (REP)  =   (R) DI[3] (REP) (by sim and name)
// IN (G) DI[2] (REP)  =   (R) DI[2] (REP) (by sim and name)
// IN (G) DI[1] (REP)  =   (R) DI[1] (REP) (by sim and name)
// IN (G) DI[0] (REP)  =   (R) DI[0] (REP) (by sim and name)
// IN (R) DFT_sdi U(REP) 
// IN (R) DFT_sen 0U(REP) 
// RESOLVED Constraints
// OUT (G) DOR[15] (REP)  =   (R) DOR[15] (REP) (by sim and name)
// OUT (G) DOR[14] (REP)  =   (R) DOR[14] (REP) (by sim and name)
// OUT (G) DOR[13] (REP)  =   (R) DOR[13] (REP) (by sim and name)
// OUT (G) DOR[12] (REP)  =   (R) DOR[12] (REP) (by sim and name)
// OUT (G) DOR[11] (REP)  =   (R) DOR[11] (REP) (by sim and name)
// OUT (G) DOR[10] (REP)  =   (R) DOR[10] (REP) (by sim and name)
// OUT (G) DOR[9] (REP)  =   (R) DOR[9] (REP) (by sim and name)
// OUT (G) DOR[8] (REP)  =   (R) DOR[8] (REP) (by sim and name)
// OUT (G) DOR[7] (REP)  =   (R) DOR[7] (REP) (by sim and name)
// OUT (G) DOR[6] (REP)  =   (R) DOR[6] (REP) (by sim and name)
// OUT (G) DOR[5] (REP)  =   (R) DOR[5] (REP) (by sim and name)
// OUT (G) DOR[4] (REP)  =   (R) DOR[4] (REP) (by sim and name)
// OUT (G) DOR[3] (REP)  =   (R) DOR[3] (REP) (by sim and name)
// OUT (G) DOR[2] (REP)  =   (R) DOR[2] (REP) (by sim and name)
// OUT (G) DOR[1] (REP)  =   (R) DOR[1] (REP) (by sim and name)
// OUT (G) DOR[0] (REP)  =   (R) DOR[0] (REP) (by sim and name)
// OUT (G) DOI[15] (REP)  =   (R) DOI[15] (REP) (by sim and name)
// OUT (G) DOI[14] (REP)  =   (R) DOI[14] (REP) (by sim and name)
// OUT (G) DOI[13] (REP)  =   (R) DOI[13] (REP) (by sim and name)
// OUT (G) DOI[12] (REP)  =   (R) DOI[12] (REP) (by sim and name)
// OUT (G) DOI[11] (REP)  =   (R) DOI[11] (REP) (by sim and name)
// OUT (G) DOI[10] (REP)  =   (R) DOI[10] (REP) (by sim and name)
// OUT (G) DOI[9] (REP)  =   (R) DOI[9] (REP) (by sim and name)
// OUT (G) DOI[8] (REP)  =   (R) DOI[8] (REP) (by sim and name)
// OUT (G) DOI[7] (REP)  =   (R) DOI[7] (REP) (by sim and name)
// OUT (G) DOI[6] (REP)  =   (R) DOI[6] (REP) (by sim and name)
// OUT (G) DOI[5] (REP)  =   (R) DOI[5] (REP) (by sim and name)
// OUT (G) DOI[4] (REP)  =   (R) DOI[4] (REP) (by sim and name)
// OUT (G) DOI[3] (REP)  =   (R) DOI[3] (REP) (by sim and name)
// OUT (G) DOI[2] (REP)  =   (R) DOI[2] (REP) (by sim and name)
// OUT (G) DOI[1] (REP)  =   (R) DOI[1] (REP) (by sim and name)
// OUT (G) DOI[0] (REP)  =   (R) DOI[0] (REP) (by sim and name)
// OUT (R) DFT_sdo U(REP) 
set root module RAM2x64C_1_nb16 -Golden
set root module RAM2x64C_1_nb16 -Revised
set module property -instance /U_BUF1/URAM -Golden
set module property -instance /U_BUF1_URAM -Revised
// Constraint commands 
add pin equivalences WE ED -hier -Golden
add pin equivalences ADDRR[5] ADDRW[2] -hier -Golden
add pin equivalences ADDRR[4] ADDRW[1] -hier -Golden
add pin equivalences ADDRR[3] ADDRW[0] -hier -Golden
add pin equivalences ADDRR[2] ADDRW[5] -hier -Golden
add pin equivalences ADDRR[1] ADDRW[4] -hier -Golden
add pin equivalences ADDRR[0] ADDRW[3] -hier -Golden
add pin constraints 0 ED -Revised
add ignored inputs ED -Revised
// UR stuck_at
add pin constraints 0 ADDRW[5] -Revised
add ignored inputs ADDRW[5] -Revised
// UR stuck_at
add pin constraints 0 ADDRW[4] -Revised
add ignored inputs ADDRW[4] -Revised
// UR stuck_at
add pin constraints 0 ADDRW[3] -Revised
add ignored inputs ADDRW[3] -Revised
// UR stuck_at
add pin constraints 0 ADDRW[2] -Revised
add ignored inputs ADDRW[2] -Revised
// UR stuck_at
add pin constraints 0 ADDRW[1] -Revised
add ignored inputs ADDRW[1] -Revised
// UR stuck_at
add pin constraints 0 ADDRW[0] -Revised
add ignored inputs ADDRW[0] -Revised
// UR stuck_at
add ignored inputs DFT_sdi -Revised
// UR
add pin constraints 0 DFT_sen -Revised
add ignored inputs DFT_sen -Revised
// UR stuck_at
add ignored outputs DFT_sdo -Revised 
// UR
report black box -NOHidden
set system mode lec
analyze datapath -module -verbose ; usage; analyze datapath  -verbose
add compared points -all
compare
save hier_compare result
set system mode setup
add black box RAM2x64C_1_nb16 -module -hier -Golden
add black box RAM2x64C_1_nb16 -module -hier -Revised
usage
// Comparing
//------------------------------------------------------------------------------
// MODULE FFT8_nb16 (G) INSTANCE /U_FFT1 (G)
// MODULE FFT8_nb16 (R) INSTANCE /U_FFT1 (R)
//------------------------------------------------------------------------------
// RESOLVED Constraints
// IN (G) DII[15] (REP)  =   (R) DII[15] (REP) (by sim and name)
// IN (G) DII[14] (REP)  =   (R) DII[14] (REP) (by sim and name)
// IN (G) DII[13] (REP)  =   (R) DII[13] (REP) (by sim and name)
// IN (G) DII[12] (REP)  =   (R) DII[12] (REP) (by sim and name)
// IN (G) DII[11] (REP)  =   (R) DII[11] (REP) (by sim and name)
// IN (G) DII[10] (REP)  =   (R) DII[10] (REP) (by sim and name)
// IN (G) DII[9] (REP)  =   (R) DII[9] (REP) (by sim and name)
// IN (G) DII[8] (REP)  =   (R) DII[8] (REP) (by sim and name)
// IN (G) DII[7] (REP)  =   (R) DII[7] (REP) (by sim and name)
// IN (G) DII[6] (REP)  =   (R) DII[6] (REP) (by sim and name)
// IN (G) DII[5] (REP)  =   (R) DII[5] (REP) (by sim and name)
// IN (G) DII[4] (REP)  =   (R) DII[4] (REP) (by sim and name)
// IN (G) DII[3] (REP)  =   (R) DII[3] (REP) (by sim and name)
// IN (G) DII[2] (REP)  =   (R) DII[2] (REP) (by sim and name)
// IN (G) DII[1] (REP)  =   (R) DII[1] (REP) (by sim and name)
// IN (G) DII[0] (REP)  =   (R) DII[0] (REP) (by sim and name)
// IN (G) RST (REP)  =   (R) RST (REP) (by sim and name)
// IN (G) ED (REP)  =   (R) ED (REP) (by sim and name)
// IN (G) CLK (REP)  =   (R) CLK (REP) (by sim and name)
// IN (G) START (REP)  =   (R) START (REP) (by sim and name)
// IN (G) DIR[15] (REP)  =   (R) DIR[15] (REP) (by sim and name)
// IN (G) DIR[14] (REP)  =   (R) DIR[14] (REP) (by sim and name)
// IN (G) DIR[13] (REP)  =   (R) DIR[13] (REP) (by sim and name)
// IN (G) DIR[12] (REP)  =   (R) DIR[12] (REP) (by sim and name)
// IN (G) DIR[11] (REP)  =   (R) DIR[11] (REP) (by sim and name)
// IN (G) DIR[10] (REP)  =   (R) DIR[10] (REP) (by sim and name)
// IN (G) DIR[9] (REP)  =   (R) DIR[9] (REP) (by sim and name)
// IN (G) DIR[8] (REP)  =   (R) DIR[8] (REP) (by sim and name)
// IN (G) DIR[7] (REP)  =   (R) DIR[7] (REP) (by sim and name)
// IN (G) DIR[6] (REP)  =   (R) DIR[6] (REP) (by sim and name)
// IN (G) DIR[5] (REP)  =   (R) DIR[5] (REP) (by sim and name)
// IN (G) DIR[4] (REP)  =   (R) DIR[4] (REP) (by sim and name)
// IN (G) DIR[3] (REP)  =   (R) DIR[3] (REP) (by sim and name)
// IN (G) DIR[2] (REP)  =   (R) DIR[2] (REP) (by sim and name)
// IN (G) DIR[1] (REP)  =   (R) DIR[1] (REP) (by sim and name)
// IN (G) DIR[0] (REP)  =   (R) DIR[0] (REP) (by sim and name)
// IN (R) DFT_sdi U(REP) 
// IN (R) DFT_sen 0U(REP) 
// RESOLVED Constraints
// OUT (G) DOR[18] (REP)  =   (R) DOR[18] (REP) (by sim and name)
// OUT (G) DOR[17] (REP)  =   (R) DOR[17] (REP) (by sim and name)
// OUT (G) DOR[16] (REP)  =   (R) DOR[16] (REP) (by sim and name)
// OUT (G) DOR[15] (REP)  =   (R) DOR[15] (REP) (by sim and name)
// OUT (G) DOR[14] (REP)  =   (R) DOR[14] (REP) (by sim and name)
// OUT (G) DOR[13] (REP)  =   (R) DOR[13] (REP) (by sim and name)
// OUT (G) DOR[12] (REP)  =   (R) DOR[12] (REP) (by sim and name)
// OUT (G) DOR[11] (REP)  =   (R) DOR[11] (REP) (by sim and name)
// OUT (G) DOR[10] (REP)  =   (R) DOR[10] (REP) (by sim and name)
// OUT (G) DOR[9] (REP)  =   (R) DOR[9] (REP) (by sim and name)
// OUT (G) DOR[8] (REP)  =   (R) DOR[8] (REP) (by sim and name)
// OUT (G) DOR[7] (REP)  =   (R) DOR[7] (REP) (by sim and name)
// OUT (G) DOR[6] (REP)  =   (R) DOR[6] (REP) (by sim and name)
// OUT (G) DOR[5] (REP)  =   (R) DOR[5] (REP) (by sim and name)
// OUT (G) DOR[4] (REP)  =   (R) DOR[4] (REP) (by sim and name)
// OUT (G) DOR[3] (REP)  =   (R) DOR[3] (REP) (by sim and name)
// OUT (G) DOR[2] (REP)  =   (R) DOR[2] (REP) (by sim and name)
// OUT (G) DOR[1] (REP)  =   (R) DOR[1] (REP) (by sim and name)
// OUT (G) DOR[0] (REP)  =   (R) DOR[0] (REP) (by sim and name)
// OUT (G) DOI[18] (REP)  =   (R) DOI[18] (REP) (by sim and name)
// OUT (G) DOI[17] (REP)  =   (R) DOI[17] (REP) (by sim and name)
// OUT (G) DOI[16] (REP)  =   (R) DOI[16] (REP) (by sim and name)
// OUT (G) DOI[15] (REP)  =   (R) DOI[15] (REP) (by sim and name)
// OUT (G) DOI[14] (REP)  =   (R) DOI[14] (REP) (by sim and name)
// OUT (G) DOI[13] (REP)  =   (R) DOI[13] (REP) (by sim and name)
// OUT (G) DOI[12] (REP)  =   (R) DOI[12] (REP) (by sim and name)
// OUT (G) DOI[11] (REP)  =   (R) DOI[11] (REP) (by sim and name)
// OUT (G) DOI[10] (REP)  =   (R) DOI[10] (REP) (by sim and name)
// OUT (G) DOI[9] (REP)  =   (R) DOI[9] (REP) (by sim and name)
// OUT (G) DOI[8] (REP)  =   (R) DOI[8] (REP) (by sim and name)
// OUT (G) DOI[7] (REP)  =   (R) DOI[7] (REP) (by sim and name)
// OUT (G) DOI[6] (REP)  =   (R) DOI[6] (REP) (by sim and name)
// OUT (G) DOI[5] (REP)  =   (R) DOI[5] (REP) (by sim and name)
// OUT (G) DOI[4] (REP)  =   (R) DOI[4] (REP) (by sim and name)
// OUT (G) DOI[3] (REP)  =   (R) DOI[3] (REP) (by sim and name)
// OUT (G) DOI[2] (REP)  =   (R) DOI[2] (REP) (by sim and name)
// OUT (G) DOI[1] (REP)  =   (R) DOI[1] (REP) (by sim and name)
// OUT (G) DOI[0] (REP)  =   (R) DOI[0] (REP) (by sim and name)
// OUT (G) RDY (REP)  =   (R) RDY (REP) (by sim and name)
// OUT (R) DFT_sdo U(REP) 
set root module FFT8_nb16 -Golden
set root module FFT8_nb16 -Revised
set module property -instance /U_FFT1 -Golden
set module property -instance /U_FFT1 -Revised
// Constraint commands 
add ignored inputs DFT_sdi -Revised
// UR
add pin constraints 0 DFT_sen -Revised
add ignored inputs DFT_sen -Revised
// UR stuck_at
add ignored outputs DFT_sdo -Revised 
// UR
report black box -NOHidden
set system mode lec
analyze datapath -module -verbose ; usage; analyze datapath  -verbose
add compared points -all
compare
save hier_compare result
set system mode setup
add black box FFT8_nb16 -module -hier -Golden
add black box FFT8_nb16 -module -hier -Revised
usage
// Comparing
//------------------------------------------------------------------------------
// MODULE RAM2x64C_1_nb18 (G) INSTANCE /U_BUF2/URAM (G)
// MODULE RAM2x64C_1_nb18 (R) INSTANCE /U_BUF2_URAM (R)
//------------------------------------------------------------------------------
// RESOLVED Constraints
// IN (G) CLK (REP)  =   (R) CLK (REP) (by sim and name)
// IN (G) ED  (EQ_REP: +WE)  =   (R) ED 0U(REP) (by name)
// IN (G) WE (REP)  =   (R) WE (REP) (by sim and name)
// IN (G) ODD (REP)  =   (R) ODD (REP) (by sim and name)
// IN (G) ADDRW[5]  (EQ_REP: +ADDRR[2])  =   (R) ADDRW[5] 0U(REP) (by name)
// IN (G) ADDRW[4]  (EQ_REP: +ADDRR[1])  =   (R) ADDRW[4] 0U(REP) (by name)
// IN (G) ADDRW[3]  (EQ_REP: +ADDRR[0])  =   (R) ADDRW[3] 0U(REP) (by name)
// IN (G) ADDRW[2]  (EQ_REP: +ADDRR[5])  =   (R) ADDRW[2] 0U(REP) (by name)
// IN (G) ADDRW[1]  (EQ_REP: +ADDRR[4])  =   (R) ADDRW[1] 0U(REP) (by name)
// IN (G) ADDRW[0]  (EQ_REP: +ADDRR[3])  =   (R) ADDRW[0] 0U(REP) (by name)
// IN (G) ADDRR[5] (REP)  =   (R) ADDRR[5] (REP) (by sim and name)
// IN (G) ADDRR[4] (REP)  =   (R) ADDRR[4] (REP) (by sim and name)
// IN (G) ADDRR[3] (REP)  =   (R) ADDRR[3] (REP) (by sim and name)
// IN (G) ADDRR[2] (REP)  =   (R) ADDRR[2] (REP) (by sim and name)
// IN (G) ADDRR[1] (REP)  =   (R) ADDRR[1] (REP) (by sim and name)
// IN (G) ADDRR[0] (REP)  =   (R) ADDRR[0] (REP) (by sim and name)
// IN (G) DR[17] (REP)  =   (R) DR[17] (REP) (by sim and name)
// IN (G) DR[16] (REP)  =   (R) DR[16] (REP) (by sim and name)
// IN (G) DR[15] (REP)  =   (R) DR[15] (REP) (by sim and name)
// IN (G) DR[14] (REP)  =   (R) DR[14] (REP) (by sim and name)
// IN (G) DR[13] (REP)  =   (R) DR[13] (REP) (by sim and name)
// IN (G) DR[12] (REP)  =   (R) DR[12] (REP) (by sim and name)
// IN (G) DR[11] (REP)  =   (R) DR[11] (REP) (by sim and name)
// IN (G) DR[10] (REP)  =   (R) DR[10] (REP) (by sim and name)
// IN (G) DR[9] (REP)  =   (R) DR[9] (REP) (by sim and name)
// IN (G) DR[8] (REP)  =   (R) DR[8] (REP) (by sim and name)
// IN (G) DR[7] (REP)  =   (R) DR[7] (REP) (by sim and name)
// IN (G) DR[6] (REP)  =   (R) DR[6] (REP) (by sim and name)
// IN (G) DR[5] (REP)  =   (R) DR[5] (REP) (by sim and name)
// IN (G) DR[4] (REP)  =   (R) DR[4] (REP) (by sim and name)
// IN (G) DR[3] (REP)  =   (R) DR[3] (REP) (by sim and name)
// IN (G) DR[2] (REP)  =   (R) DR[2] (REP) (by sim and name)
// IN (G) DR[1] (REP)  =   (R) DR[1] (REP) (by sim and name)
// IN (G) DR[0] (REP)  =   (R) DR[0] (REP) (by sim and name)
// IN (G) DI[17] (REP)  =   (R) DI[17] (REP) (by sim and name)
// IN (G) DI[16] (REP)  =   (R) DI[16] (REP) (by sim and name)
// IN (G) DI[15] (REP)  =   (R) DI[15] (REP) (by sim and name)
// IN (G) DI[14] (REP)  =   (R) DI[14] (REP) (by sim and name)
// IN (G) DI[13] (REP)  =   (R) DI[13] (REP) (by sim and name)
// IN (G) DI[12] (REP)  =   (R) DI[12] (REP) (by sim and name)
// IN (G) DI[11] (REP)  =   (R) DI[11] (REP) (by sim and name)
// IN (G) DI[10] (REP)  =   (R) DI[10] (REP) (by sim and name)
// IN (G) DI[9] (REP)  =   (R) DI[9] (REP) (by sim and name)
// IN (G) DI[8] (REP)  =   (R) DI[8] (REP) (by sim and name)
// IN (G) DI[7] (REP)  =   (R) DI[7] (REP) (by sim and name)
// IN (G) DI[6] (REP)  =   (R) DI[6] (REP) (by sim and name)
// IN (G) DI[5] (REP)  =   (R) DI[5] (REP) (by sim and name)
// IN (G) DI[4] (REP)  =   (R) DI[4] (REP) (by sim and name)
// IN (G) DI[3] (REP)  =   (R) DI[3] (REP) (by sim and name)
// IN (G) DI[2] (REP)  =   (R) DI[2] (REP) (by sim and name)
// IN (G) DI[1] (REP)  =   (R) DI[1] (REP) (by sim and name)
// IN (G) DI[0] (REP)  =   (R) DI[0] (REP) (by sim and name)
// IN (R) DFT_sdi U(REP) 
// IN (R) DFT_sen 0U(REP) 
// IN (R) DFT_sdi_1 U(REP) 
// RESOLVED Constraints
// OUT (G) DOR[17] (REP)  =   (R) DOR[17] (REP) (by sim and name)
// OUT (G) DOR[16] (REP)  =   (R) DOR[16] (REP) (by sim and name)
// OUT (G) DOR[15] (REP)  =   (R) DOR[15] (REP) (by sim and name)
// OUT (G) DOR[14] (REP)  =   (R) DOR[14] (REP) (by sim and name)
// OUT (G) DOR[13] (REP)  =   (R) DOR[13] (REP) (by sim and name)
// OUT (G) DOR[12] (REP)  =   (R) DOR[12] (REP) (by sim and name)
// OUT (G) DOR[11] (REP)  =   (R) DOR[11] (REP) (by sim and name)
// OUT (G) DOR[10] (REP)  =   (R) DOR[10] (REP) (by sim and name)
// OUT (G) DOR[9] (REP)  =   (R) DOR[9] (REP) (by sim and name)
// OUT (G) DOR[8] (REP)  =   (R) DOR[8] (REP) (by sim and name)
// OUT (G) DOR[7] (REP)  =   (R) DOR[7] (REP) (by sim and name)
// OUT (G) DOR[6] (REP)  =   (R) DOR[6] (REP) (by sim and name)
// OUT (G) DOR[5] (REP)  =   (R) DOR[5] (REP) (by sim and name)
// OUT (G) DOR[4] (REP)  =   (R) DOR[4] (REP) (by sim and name)
// OUT (G) DOR[3] (REP)  =   (R) DOR[3] (REP) (by sim and name)
// OUT (G) DOR[2] (REP)  =   (R) DOR[2] (REP) (by sim and name)
// OUT (G) DOR[1] (REP)  =   (R) DOR[1] (REP) (by sim and name)
// OUT (G) DOR[0] (REP)  =   (R) DOR[0] (REP) (by sim and name)
// OUT (G) DOI[17] (REP)  =   (R) DOI[17] (REP) (by sim and name)
// OUT (G) DOI[16] (REP)  =   (R) DOI[16] (REP) (by sim and name)
// OUT (G) DOI[15] (REP)  =   (R) DOI[15] (REP) (by sim and name)
// OUT (G) DOI[14] (REP)  =   (R) DOI[14] (REP) (by sim and name)
// OUT (G) DOI[13] (REP)  =   (R) DOI[13] (REP) (by sim and name)
// OUT (G) DOI[12] (REP)  =   (R) DOI[12] (REP) (by sim and name)
// OUT (G) DOI[11] (REP)  =   (R) DOI[11] (REP) (by sim and name)
// OUT (G) DOI[10] (REP)  =   (R) DOI[10] (REP) (by sim and name)
// OUT (G) DOI[9] (REP)  =   (R) DOI[9] (REP) (by sim and name)
// OUT (G) DOI[8] (REP)  =   (R) DOI[8] (REP) (by sim and name)
// OUT (G) DOI[7] (REP)  =   (R) DOI[7] (REP) (by sim and name)
// OUT (G) DOI[6] (REP)  =   (R) DOI[6] (REP) (by sim and name)
// OUT (G) DOI[5] (REP)  =   (R) DOI[5] (REP) (by sim and name)
// OUT (G) DOI[4] (REP)  =   (R) DOI[4] (REP) (by sim and name)
// OUT (G) DOI[3] (REP)  =   (R) DOI[3] (REP) (by sim and name)
// OUT (G) DOI[2] (REP)  =   (R) DOI[2] (REP) (by sim and name)
// OUT (G) DOI[1] (REP)  =   (R) DOI[1] (REP) (by sim and name)
// OUT (G) DOI[0] (REP)  =   (R) DOI[0] (REP) (by sim and name)
// OUT (R) DFT_sdo U(REP) 
// OUT (R) DFT_sdo_2 U(REP) 
set root module RAM2x64C_1_nb18 -Golden
set root module RAM2x64C_1_nb18 -Revised
set module property -instance /U_BUF2/URAM -Golden
set module property -instance /U_BUF2_URAM -Revised
// Constraint commands 
add pin equivalences WE ED -hier -Golden
add pin equivalences ADDRR[5] ADDRW[2] -hier -Golden
add pin equivalences ADDRR[4] ADDRW[1] -hier -Golden
add pin equivalences ADDRR[3] ADDRW[0] -hier -Golden
add pin equivalences ADDRR[2] ADDRW[5] -hier -Golden
add pin equivalences ADDRR[1] ADDRW[4] -hier -Golden
add pin equivalences ADDRR[0] ADDRW[3] -hier -Golden
add pin constraints 0 ED -Revised
add ignored inputs ED -Revised
// UR stuck_at
add pin constraints 0 ADDRW[5] -Revised
add ignored inputs ADDRW[5] -Revised
// UR stuck_at
add pin constraints 0 ADDRW[4] -Revised
add ignored inputs ADDRW[4] -Revised
// UR stuck_at
add pin constraints 0 ADDRW[3] -Revised
add ignored inputs ADDRW[3] -Revised
// UR stuck_at
add pin constraints 0 ADDRW[2] -Revised
add ignored inputs ADDRW[2] -Revised
// UR stuck_at
add pin constraints 0 ADDRW[1] -Revised
add ignored inputs ADDRW[1] -Revised
// UR stuck_at
add pin constraints 0 ADDRW[0] -Revised
add ignored inputs ADDRW[0] -Revised
// UR stuck_at
add ignored inputs DFT_sdi -Revised
// UR
add pin constraints 0 DFT_sen -Revised
add ignored inputs DFT_sen -Revised
// UR stuck_at
add ignored inputs DFT_sdi_1 -Revised
// UR
add ignored outputs DFT_sdo -Revised 
// UR
add ignored outputs DFT_sdo_2 -Revised 
// UR
report black box -NOHidden
set system mode lec
analyze datapath -module -verbose ; usage; analyze datapath  -verbose
add compared points -all
compare
save hier_compare result
set system mode setup
add black box RAM2x64C_1_nb18 -module -hier -Golden
add black box RAM2x64C_1_nb18 -module -hier -Revised
usage
// Comparing
//------------------------------------------------------------------------------
// MODULE FFT8_nb18 (G) INSTANCE /U_FFT2 (G)
// MODULE FFT8_nb18 (R) INSTANCE /U_FFT2 (R)
//------------------------------------------------------------------------------
// RESOLVED Constraints
// IN (G) DII[17] (REP)  =   (R) DII[17] (REP) (by sim and name)
// IN (G) DII[16] (REP)  =   (R) DII[16] (REP) (by sim and name)
// IN (G) DII[15] (REP)  =   (R) DII[15] (REP) (by sim and name)
// IN (G) DII[14] (REP)  =   (R) DII[14] (REP) (by sim and name)
// IN (G) DII[13] (REP)  =   (R) DII[13] (REP) (by sim and name)
// IN (G) DII[12] (REP)  =   (R) DII[12] (REP) (by sim and name)
// IN (G) DII[11] (REP)  =   (R) DII[11] (REP) (by sim and name)
// IN (G) DII[10] (REP)  =   (R) DII[10] (REP) (by sim and name)
// IN (G) DII[9] (REP)  =   (R) DII[9] (REP) (by sim and name)
// IN (G) DII[8] (REP)  =   (R) DII[8] (REP) (by sim and name)
// IN (G) DII[7] (REP)  =   (R) DII[7] (REP) (by sim and name)
// IN (G) DII[6] (REP)  =   (R) DII[6] (REP) (by sim and name)
// IN (G) DII[5] (REP)  =   (R) DII[5] (REP) (by sim and name)
// IN (G) DII[4] (REP)  =   (R) DII[4] (REP) (by sim and name)
// IN (G) DII[3] (REP)  =   (R) DII[3] (REP) (by sim and name)
// IN (G) DII[2] (REP)  =   (R) DII[2] (REP) (by sim and name)
// IN (G) DII[1] (REP)  =   (R) DII[1] (REP) (by sim and name)
// IN (G) DII[0] (REP)  =   (R) DII[0] (REP) (by sim and name)
// IN (G) RST (REP)  =   (R) RST (REP) (by sim and name)
// IN (G) ED (REP)  =   (R) ED (REP) (by sim and name)
// IN (G) CLK (REP)  =   (R) CLK (REP) (by sim and name)
// IN (G) START (REP)  =   (R) START (REP) (by sim and name)
// IN (G) DIR[17] (REP)  =   (R) DIR[17] (REP) (by sim and name)
// IN (G) DIR[16] (REP)  =   (R) DIR[16] (REP) (by sim and name)
// IN (G) DIR[15] (REP)  =   (R) DIR[15] (REP) (by sim and name)
// IN (G) DIR[14] (REP)  =   (R) DIR[14] (REP) (by sim and name)
// IN (G) DIR[13] (REP)  =   (R) DIR[13] (REP) (by sim and name)
// IN (G) DIR[12] (REP)  =   (R) DIR[12] (REP) (by sim and name)
// IN (G) DIR[11] (REP)  =   (R) DIR[11] (REP) (by sim and name)
// IN (G) DIR[10] (REP)  =   (R) DIR[10] (REP) (by sim and name)
// IN (G) DIR[9] (REP)  =   (R) DIR[9] (REP) (by sim and name)
// IN (G) DIR[8] (REP)  =   (R) DIR[8] (REP) (by sim and name)
// IN (G) DIR[7] (REP)  =   (R) DIR[7] (REP) (by sim and name)
// IN (G) DIR[6] (REP)  =   (R) DIR[6] (REP) (by sim and name)
// IN (G) DIR[5] (REP)  =   (R) DIR[5] (REP) (by sim and name)
// IN (G) DIR[4] (REP)  =   (R) DIR[4] (REP) (by sim and name)
// IN (G) DIR[3] (REP)  =   (R) DIR[3] (REP) (by sim and name)
// IN (G) DIR[2] (REP)  =   (R) DIR[2] (REP) (by sim and name)
// IN (G) DIR[1] (REP)  =   (R) DIR[1] (REP) (by sim and name)
// IN (G) DIR[0] (REP)  =   (R) DIR[0] (REP) (by sim and name)
// IN (R) DFT_sdi U(REP) 
// IN (R) DFT_sen 0U(REP) 
// RESOLVED Constraints
// OUT (G) DOR[20] (REP)  =   (R) DOR[20] (REP) (by sim and name)
// OUT (G) DOR[19] (REP)  =   (R) DOR[19] (REP) (by sim and name)
// OUT (G) DOR[18] (REP)  =   (R) DOR[18] (REP) (by sim and name)
// OUT (G) DOR[17] (REP)  =   (R) DOR[17] (REP) (by sim and name)
// OUT (G) DOR[16] (REP)  =   (R) DOR[16] (REP) (by sim and name)
// OUT (G) DOR[15] (REP)  =   (R) DOR[15] (REP) (by sim and name)
// OUT (G) DOR[14] (REP)  =   (R) DOR[14] (REP) (by sim and name)
// OUT (G) DOR[13] (REP)  =   (R) DOR[13] (REP) (by sim and name)
// OUT (G) DOR[12] (REP)  =   (R) DOR[12] (REP) (by sim and name)
// OUT (G) DOR[11] (REP)  =   (R) DOR[11] (REP) (by sim and name)
// OUT (G) DOR[10] (REP)  =   (R) DOR[10] (REP) (by sim and name)
// OUT (G) DOR[9] (REP)  =   (R) DOR[9] (REP) (by sim and name)
// OUT (G) DOR[8] (REP)  =   (R) DOR[8] (REP) (by sim and name)
// OUT (G) DOR[7] (REP)  =   (R) DOR[7] (REP) (by sim and name)
// OUT (G) DOR[6] (REP)  =   (R) DOR[6] (REP) (by sim and name)
// OUT (G) DOR[5] (REP)  =   (R) DOR[5] (REP) (by sim and name)
// OUT (G) DOR[4] (REP)  =   (R) DOR[4] (REP) (by sim and name)
// OUT (G) DOR[3] (REP)  =   (R) DOR[3] (REP) (by sim and name)
// OUT (G) DOR[2] (REP)  =   (R) DOR[2] (REP) (by sim and name)
// OUT (G) DOR[1] (REP)  =   (R) DOR[1] (REP) (by sim and name)
// OUT (G) DOR[0] (REP)  =   (R) DOR[0] (REP) (by sim and name)
// OUT (G) DOI[20] (REP)  =   (R) DOI[20] (REP) (by sim and name)
// OUT (G) DOI[19] (REP)  =   (R) DOI[19] (REP) (by sim and name)
// OUT (G) DOI[18] (REP)  =   (R) DOI[18] (REP) (by sim and name)
// OUT (G) DOI[17] (REP)  =   (R) DOI[17] (REP) (by sim and name)
// OUT (G) DOI[16] (REP)  =   (R) DOI[16] (REP) (by sim and name)
// OUT (G) DOI[15] (REP)  =   (R) DOI[15] (REP) (by sim and name)
// OUT (G) DOI[14] (REP)  =   (R) DOI[14] (REP) (by sim and name)
// OUT (G) DOI[13] (REP)  =   (R) DOI[13] (REP) (by sim and name)
// OUT (G) DOI[12] (REP)  =   (R) DOI[12] (REP) (by sim and name)
// OUT (G) DOI[11] (REP)  =   (R) DOI[11] (REP) (by sim and name)
// OUT (G) DOI[10] (REP)  =   (R) DOI[10] (REP) (by sim and name)
// OUT (G) DOI[9] (REP)  =   (R) DOI[9] (REP) (by sim and name)
// OUT (G) DOI[8] (REP)  =   (R) DOI[8] (REP) (by sim and name)
// OUT (G) DOI[7] (REP)  =   (R) DOI[7] (REP) (by sim and name)
// OUT (G) DOI[6] (REP)  =   (R) DOI[6] (REP) (by sim and name)
// OUT (G) DOI[5] (REP)  =   (R) DOI[5] (REP) (by sim and name)
// OUT (G) DOI[4] (REP)  =   (R) DOI[4] (REP) (by sim and name)
// OUT (G) DOI[3] (REP)  =   (R) DOI[3] (REP) (by sim and name)
// OUT (G) DOI[2] (REP)  =   (R) DOI[2] (REP) (by sim and name)
// OUT (G) DOI[1] (REP)  =   (R) DOI[1] (REP) (by sim and name)
// OUT (G) DOI[0] (REP)  =   (R) DOI[0] (REP) (by sim and name)
// OUT (G) RDY (REP)  =   (R) RDY (REP) (by sim and name)
// OUT (R) DFT_sdo U(REP) 
set root module FFT8_nb18 -Golden
set root module FFT8_nb18 -Revised
set module property -instance /U_FFT2 -Golden
set module property -instance /U_FFT2 -Revised
// Constraint commands 
add ignored inputs DFT_sdi -Revised
// UR
add pin constraints 0 DFT_sen -Revised
add ignored inputs DFT_sen -Revised
// UR stuck_at
add ignored outputs DFT_sdo -Revised 
// UR
report black box -NOHidden
set system mode lec
analyze datapath -module -verbose ; usage; analyze datapath  -verbose
add compared points -all
compare
save hier_compare result
set system mode setup
add black box FFT8_nb18 -module -hier -Golden
add black box FFT8_nb18 -module -hier -Revised
usage
// Root Modules
// Comparing
//------------------------------------------------------------------------------
// MODULE USFFT64_2B (G) INSTANCE / (G)
// MODULE USFFT64_2B (R) INSTANCE / (R)
//------------------------------------------------------------------------------
// RESOLVED Constraints
// IN (G) CLK (REP)  =   (R) CLK (REP) (by name)
// IN (G) RST (REP)  =   (R) RST (REP) (by name)
// IN (G) ED (REP)  =   (R) ED (REP) (by name)
// IN (G) START (REP)  =   (R) START (REP) (by name)
// IN (G) SHIFT[3] (REP)  =   (R) SHIFT[3] (REP) (by name)
// IN (G) SHIFT[2] (REP)  =   (R) SHIFT[2] (REP) (by name)
// IN (G) SHIFT[1] (REP)  =   (R) SHIFT[1] (REP) (by name)
// IN (G) SHIFT[0] (REP)  =   (R) SHIFT[0] (REP) (by name)
// IN (G) DR[15] (REP)  =   (R) DR[15] (REP) (by name)
// IN (G) DR[14] (REP)  =   (R) DR[14] (REP) (by name)
// IN (G) DR[13] (REP)  =   (R) DR[13] (REP) (by name)
// IN (G) DR[12] (REP)  =   (R) DR[12] (REP) (by name)
// IN (G) DR[11] (REP)  =   (R) DR[11] (REP) (by name)
// IN (G) DR[10] (REP)  =   (R) DR[10] (REP) (by name)
// IN (G) DR[9] (REP)  =   (R) DR[9] (REP) (by name)
// IN (G) DR[8] (REP)  =   (R) DR[8] (REP) (by name)
// IN (G) DR[7] (REP)  =   (R) DR[7] (REP) (by name)
// IN (G) DR[6] (REP)  =   (R) DR[6] (REP) (by name)
// IN (G) DR[5] (REP)  =   (R) DR[5] (REP) (by name)
// IN (G) DR[4] (REP)  =   (R) DR[4] (REP) (by name)
// IN (G) DR[3] (REP)  =   (R) DR[3] (REP) (by name)
// IN (G) DR[2] (REP)  =   (R) DR[2] (REP) (by name)
// IN (G) DR[1] (REP)  =   (R) DR[1] (REP) (by name)
// IN (G) DR[0] (REP)  =   (R) DR[0] (REP) (by name)
// IN (G) DI[15] (REP)  =   (R) DI[15] (REP) (by name)
// IN (G) DI[14] (REP)  =   (R) DI[14] (REP) (by name)
// IN (G) DI[13] (REP)  =   (R) DI[13] (REP) (by name)
// IN (G) DI[12] (REP)  =   (R) DI[12] (REP) (by name)
// IN (G) DI[11] (REP)  =   (R) DI[11] (REP) (by name)
// IN (G) DI[10] (REP)  =   (R) DI[10] (REP) (by name)
// IN (G) DI[9] (REP)  =   (R) DI[9] (REP) (by name)
// IN (G) DI[8] (REP)  =   (R) DI[8] (REP) (by name)
// IN (G) DI[7] (REP)  =   (R) DI[7] (REP) (by name)
// IN (G) DI[6] (REP)  =   (R) DI[6] (REP) (by name)
// IN (G) DI[5] (REP)  =   (R) DI[5] (REP) (by name)
// IN (G) DI[4] (REP)  =   (R) DI[4] (REP) (by name)
// IN (G) DI[3] (REP)  =   (R) DI[3] (REP) (by name)
// IN (G) DI[2] (REP)  =   (R) DI[2] (REP) (by name)
// IN (G) DI[1] (REP)  =   (R) DI[1] (REP) (by name)
// IN (G) DI[0] (REP)  =   (R) DI[0] (REP) (by name)
// IN (G) dft_shift_enable (REP)  =   (R) dft_shift_enable (REP) (by name)
// IN (G) dft_scan_input_1 U(REP)  =   (R) dft_scan_input_1 U(REP) (by name)
// IN (G) dft_scan_input_2 U(REP)  =   (R) dft_scan_input_2 U(REP) (by name)
// RESOLVED Constraints
// OUT (G) RDY (REP)  =   (R) RDY (REP) (by name)
// OUT (G) OVF1 (REP)  =   (R) OVF1 (REP) (by name)
// OUT (G) OVF2 (REP)  =   (R) OVF2 (REP) (by name)
// OUT (G) ADDR[5] (REP)  =   (R) ADDR[5] (REP) (by name)
// OUT (G) ADDR[4] (REP)  =   (R) ADDR[4] (REP) (by name)
// OUT (G) ADDR[3] (REP)  =   (R) ADDR[3] (REP) (by name)
// OUT (G) ADDR[2] (REP)  =   (R) ADDR[2] (REP) (by name)
// OUT (G) ADDR[1] (REP)  =   (R) ADDR[1] (REP) (by name)
// OUT (G) ADDR[0] (REP)  =   (R) ADDR[0] (REP) (by name)
// OUT (G) DOR[18] (REP)  =   (R) DOR[18] (REP) (by name)
// OUT (G) DOR[17] (REP)  =   (R) DOR[17] (REP) (by name)
// OUT (G) DOR[16] (REP)  =   (R) DOR[16] (REP) (by name)
// OUT (G) DOR[15] (REP)  =   (R) DOR[15] (REP) (by name)
// OUT (G) DOR[14] (REP)  =   (R) DOR[14] (REP) (by name)
// OUT (G) DOR[13] (REP)  =   (R) DOR[13] (REP) (by name)
// OUT (G) DOR[12] (REP)  =   (R) DOR[12] (REP) (by name)
// OUT (G) DOR[11] (REP)  =   (R) DOR[11] (REP) (by name)
// OUT (G) DOR[10] (REP)  =   (R) DOR[10] (REP) (by name)
// OUT (G) DOR[9] (REP)  =   (R) DOR[9] (REP) (by name)
// OUT (G) DOR[8] (REP)  =   (R) DOR[8] (REP) (by name)
// OUT (G) DOR[7] (REP)  =   (R) DOR[7] (REP) (by name)
// OUT (G) DOR[6] (REP)  =   (R) DOR[6] (REP) (by name)
// OUT (G) DOR[5] (REP)  =   (R) DOR[5] (REP) (by name)
// OUT (G) DOR[4] (REP)  =   (R) DOR[4] (REP) (by name)
// OUT (G) DOR[3] (REP)  =   (R) DOR[3] (REP) (by name)
// OUT (G) DOR[2] (REP)  =   (R) DOR[2] (REP) (by name)
// OUT (G) DOR[1] (REP)  =   (R) DOR[1] (REP) (by name)
// OUT (G) DOR[0] (REP)  =   (R) DOR[0] (REP) (by name)
// OUT (G) DOI[18] (REP)  =   (R) DOI[18] (REP) (by name)
// OUT (G) DOI[17] (REP)  =   (R) DOI[17] (REP) (by name)
// OUT (G) DOI[16] (REP)  =   (R) DOI[16] (REP) (by name)
// OUT (G) DOI[15] (REP)  =   (R) DOI[15] (REP) (by name)
// OUT (G) DOI[14] (REP)  =   (R) DOI[14] (REP) (by name)
// OUT (G) DOI[13] (REP)  =   (R) DOI[13] (REP) (by name)
// OUT (G) DOI[12] (REP)  =   (R) DOI[12] (REP) (by name)
// OUT (G) DOI[11] (REP)  =   (R) DOI[11] (REP) (by name)
// OUT (G) DOI[10] (REP)  =   (R) DOI[10] (REP) (by name)
// OUT (G) DOI[9] (REP)  =   (R) DOI[9] (REP) (by name)
// OUT (G) DOI[8] (REP)  =   (R) DOI[8] (REP) (by name)
// OUT (G) DOI[7] (REP)  =   (R) DOI[7] (REP) (by name)
// OUT (G) DOI[6] (REP)  =   (R) DOI[6] (REP) (by name)
// OUT (G) DOI[5] (REP)  =   (R) DOI[5] (REP) (by name)
// OUT (G) DOI[4] (REP)  =   (R) DOI[4] (REP) (by name)
// OUT (G) DOI[3] (REP)  =   (R) DOI[3] (REP) (by name)
// OUT (G) DOI[2] (REP)  =   (R) DOI[2] (REP) (by name)
// OUT (G) DOI[1] (REP)  =   (R) DOI[1] (REP) (by name)
// OUT (G) DOI[0] (REP)  =   (R) DOI[0] (REP) (by name)
// OUT (G) dft_scan_output_1 (REP)  =   (R) dft_scan_output_1 (REP) (by name)
// OUT (G) dft_scan_output_2 (REP)  =   (R) dft_scan_output_2 (REP) (by name)
set root module USFFT64_2B -Golden
set root module USFFT64_2B -Revised
set module property -instance / -Golden
set module property -instance / -Revised
// Constraint commands 
add ignored inputs dft_scan_input_1 -Golden
// UR
add ignored inputs dft_scan_input_2 -Golden
// UR
add ignored inputs dft_scan_input_1 -Revised
// UR
add ignored inputs dft_scan_input_2 -Revised
// UR
report black box -NOHidden
set system mode lec
analyze datapath -module -verbose ; usage; analyze datapath  -verbose
add compared points -all
compare
save hier_compare result
set system mode setup
usage
report hier_compare result
report hier_compare result -Nonequivalent
report hier_compare result -Abort
report hier_compare result -Uncompared
//------------------------------------------------------------------------------
// VERBOSE REPORTING
//------------------------------------------------------------------------------
// The following Golden modules are not written because of non-matching
// instance names in Revised:
// MPU707_nb18_0 (Instance: U_FFT2/UMI) (G)
// RAM2x64C_1_nb19 (Instance: Ubuf3/URAM) (G)
// BUFRAM64C1_nb19 (Instance: Ubuf3) (G)
// MPU707_nb16 (Instance: U_FFT1/UMR) (G)
// MPU707_nb16_0 (Instance: U_FFT1/UMI) (G)
// ROTATOR64 (Instance: U_MPU) (G)
// WROM64 (Instance: U_MPU/UROM) (G)
// BUFRAM64C1_nb16 (Instance: U_BUF1) (G)
// MPU707_nb18 (Instance: U_FFT2/UMR) (G)
// BUFRAM64C1_nb18 (Instance: U_BUF2) (G)
// CNORM_nb16 (Instance: U_NORM1) (G)
// CNORM_nb18 (Instance: U_NORM2) (G)
//------------------------------------------------------------------------------
// The following Revised modules are not written because of non-matching
// instance names in Golden:
// mult_signed (Instance: U_MPU_mul_110_17) (R)
// csa_tree_add_82_30_group_784_785_1 (Instance: U_FFT2/UMR_csa_tree_add_82_30_groupi) (R)
// csa_tree_add_82_30_group_788_789_1 (Instance: U_FFT1/UMR_csa_tree_add_82_30_groupi) (R)
// csa_tree_add_82_30_group_784_785 (Instance: U_FFT2/UMI_csa_tree_add_82_30_groupi) (R)
// csa_tree_add_82_30_group_788_789 (Instance: U_FFT1/UMI_csa_tree_add_82_30_groupi) (R)
//------------------------------------------------------------------------------
// _END_OF_LEC_HIERARCHICAL_DOFILE_
